# -*- mode: ruby -*-
# vi: set ft=ruby :

#
# This file is placed here as a starter by gradle-devtools-plugin. Uncomment and update as required.
#

PROJECT_NAME = ENV['PROJECT_NAME'] || File.basename(File.expand_path(File.dirname(__FILE__)))

#
# Environment variables that can be overriden on vagrant up
#
ANSIBLE_GALAXY_FORCE = ENV['ANSIBLE_GALAXY_FORCE'] || "--force"
ANSIBLE_GALAXY = ENV['ANSIBLE_GALAXY'] == 'false' ? false : true
ANSIBLE_VERSION = ENV['ANSIBLE_VERSION'] || '2.4.2.0'
VM_NAME = ENV['VM_NAME'] || 'centos'
VM_CPUS = ENV['VM_CPUS'] || 1
VM_CPU_CAP = ENV['VM_CPU_CAP'] || 100
VM_MEMORY = ENV['VM_MEMORY'] || 6144
VM_GUI = ENV['VM_GUI'] == 'false' ? false : true
VB_GUEST = ENV['VB_GUEST'] == 'true' ? true : false
HTTP_PROXY = ENV['HTTP_PROXY']
HTTPS_PROXY = ENV['HTTPS_PROXY']
NO_PROXY = ENV['NO_PROXY']
OPENSHIFT_PORT_HOST = ENV['OPENSHIFT_PORT_HOST'] || 8443
gitUsername = ENV['GIT_USERNAME'] || ''
gitEmail = ENV['GIT_EMAIL'] || ''

boxes = [
  {
  :name => "centos",
  :box => "boxcutter/centos7-desktop",
  :cpu => VM_CPU_CAP,
  :ram => VM_MEMORY
  }
]

Vagrant.configure("2") do |config|

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = VB_GUEST
  end

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  if Vagrant.has_plugin?("vagrant-proxyconf")
    if(HTTP_PROXY.nil? || HTTP_PROXY.empty? || HTTP_PROXY == 'null')
      puts "Disabling proxy conf plugin. No proxy settings found."
      config.proxy.enabled = false
    else
      config.proxy.http = HTTP_PROXY
      config.proxy.https = HTTPS_PROXY
      config.proxy.no_proxy = NO_PROXY
    end
  end

  boxes.each do |box|
    config.vm.define box[:name], primary: box[:primary] do |vms|
      vms.vm.box = box[:box]

      vms.vm.network "private_network", ip: "192.168.152.2"

      @syncfolder_type = 'virtualbox'
      if Vagrant::Util::Platform.windows? then
        syncfolder_type = 'nfs'
      end
      vms.vm.synced_folder '../', '/vagrant', type: syncfolder_type , disabled: false
      vms.vm.synced_folder "~/.m2", '/home/vagrant/.m2', type: syncfolder_type , disabled: false

      # All this to get the git username and email to set in the poststrap provisioner. FIXNME glob path is hardcoded to centos/virtualbox
      #promptForGitDetails(gitUsername, gitEmail)

      vms.vm.provider :virtualbox do |vb|
        unless VM_NAME.to_s.strip.empty?
          #Required for testkit testing to cleanup VMs
          vb.name = VM_NAME
        end
        vb.gui = VM_GUI
        vb.cpus = VM_CPUS
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", box[:cpu]]
        vb.customize ["modifyvm", :id, "--memory", box[:ram]]
      end
      
      vms.vm.provider :vmware_workstation do |vm|
        vm.gui = VM_GUI
        vm.vmx["memsize"] = box[:ram]
        vm.vmx["numvcpus"] = VM_CPUS
      end

      vms.vm.provision "bootstrap", type: :shell, path: "provision/bootstrap.sh"
      vms.vm.provision "bootstrapCentos", type: :shell, path: "provision/bootstrap_centos.sh"

      # Note: bootstrap_centos.sh installs ansible
      vms.vm.provision "ansible", type: :ansible_local do |ansible|
        ansible.verbose = "v"
        ansible.install_mode = "pip"
        ansible.version = ANSIBLE_VERSION
        ansible.playbook = "#{PROJECT_NAME}/provision/playbook.yml"
        ansible.galaxy_role_file = "#{PROJECT_NAME}/provision/requirements.yml"
        ansible.galaxy_roles_path = "#{PROJECT_NAME}/provision/roles"
        ansible.galaxy_command = "ansible-galaxy install --ignore-certs --role-file=%{role_file} --roles-path=%{roles_path} #{ANSIBLE_GALAXY_FORCE}"
        ansible.become = true
      end

      #vms.vm.provision "poststrap" , type: :shell, path: "provision/poststrap.sh", args: [gitUsername, gitEmail]
    end
  end

end

def promptForGitDetails(gitUsername, gitEmail)
  provider = (ARGV.include? 'vmware_workstation') ? :vmware_workstation : :virtualbox
  puts "provider: #{provider}"
  puts "Checking #{File.dirname(__FILE__)}/.vagrant/machines/centos/#{provider}/"
  puts (Dir.entries("#{File.dirname(__FILE__)}/.vagrant/machines/centos/#{provider}/") - %w{ . .. }).empty?

  if ((Dir.entries("#{File.dirname(__FILE__)}/.vagrant/machines/centos/#{provider}/") - %w{ . .. }).empty? ||
  ARGV[1] == '--provision' ||
  (ARGV[1] == '--provision-with' && ARGV[2] == 'poststrap')) &&
  (gitUsername.nil? || gitUsername.empty? || gitUsername == 'null' || gitEmail.nil? || gitEmail.empty? || gitEmail == 'null') &&
  (ARGV[0] == 'provision' || ARGV[0] == 'up')
    print "Enter your git global config credentials: \n"
    print "user.name: "
    gitUsername = STDIN.gets
    gitUsername = !gitUsername.nil? ? gitUsername.chomp : ''
    print "user.email: "
    gitEmail = STDIN.gets
    gitEmail = !gitEmail.nil? ? gitEmail.chomp : ''
    print "\n"
  end
end
